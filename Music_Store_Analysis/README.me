# 🎵 Music Store Queries 📊

## 🚀 Project Overview
This project contains a series of **SQL queries** designed to analyze **business intelligence data** from a music store database. The queries are categorized into three difficulty levels: **Easy, Moderate, and Advanced.** These queries help in extracting key business insights such as **top customers, best-performing artists, most popular music genres, and highest revenue-generating locations.**

---

## 📂 Dataset
The dataset consists of multiple tables, including:
- 🧑‍💼 `employee`
- 💰 `invoice`
- 👥 `customer`
- 🎵 `track`
- 💿 `album`
- 🎤 `artist`
- 📄 `invoice_line`
- 🎼 `genre`

---

## 🔍 Queries & Insights

### **🟢 Easy Level Queries:**
1️⃣ Identify the **senior-most employee** based on job title.
2️⃣ Determine the **top countries** with the most invoices.
3️⃣ Retrieve the **top 3 highest invoice amounts.**
4️⃣ Find the **city generating the highest revenue.**
5️⃣ Identify the **customer who has spent the most money.**

### **🟡 Moderate Level Queries:**
1️⃣ Extract **email, first name, last name, and genre preferences** of Rock music listeners.
2️⃣ List the **top 10 artists** who have written the most Rock songs.
3️⃣ Retrieve all track names **longer than the average song length.**

### **🔴 Advanced Level Queries:**
1️⃣ Determine the **total amount each customer** has spent on artists.
2️⃣ Identify the **most popular music genre for each country** based on purchases.
3️⃣ Find the **highest-spending customer** for each country.

---

## 🛠 Technologies Used
✅ **PostgreSQL / MySQL / SQLite** (as applicable)
✅ **SQL Joins, Aggregations, Subqueries, CTEs (Common Table Expressions)**
✅ **Window Functions (ROW_NUMBER, PARTITION BY)**

---

## 📌 How to Use
1️⃣ Load the dataset into a **SQL-supported database system.**
2️⃣ Run the provided queries in your **SQL environment.**
3️⃣ Analyze the output to **gain business insights.**

---

## 🚀 Future Enhancements
🔹 Extend the analysis to include **customer lifetime value predictions.**
🔹 Implement **visualizations using Python (Pandas, Matplotlib) or Power BI/Tableau.**
🔹 Optimize **query performance for large datasets.**

---

## 🤝 Contributing
Feel free to **fork this repository** and contribute by submitting pull requests with **improved queries or additional insights.**

---

### ✍️ Author: [Your Name]  
📧 **Contact:** [vishesh.expert@gmail.com, https://www.linkedin.com/in/vishesh-mishra-477474238/]

